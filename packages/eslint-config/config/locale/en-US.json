{
  "setter 必须有对应的 getter，getter 可以没有对应的 setter": "setter 必须有对应的 getter，getter 可以没有对应的 setter",
  "数组的方法除了 forEach 之外，回调函数必须有返回值": "数组的方法除了 forEach 之外，回调函数必须有返回值",
  "箭头函数体必须由大括号包裹": "箭头函数体必须由大括号包裹",
  "代码格式问题，最好由 Prettier 解决": "代码格式问题，最好由 Prettier 解决",
  "将 var 定义的变量视为块作用域，禁止在块外使用": "将 var 定义的变量视为块作用域，禁止在块外使用",
  "已经禁止使用 var 了": "已经禁止使用 var 了",
  "变量名必须是 camelCase 风格的": "变量名必须是 camelCase 风格的",
  "很多 api 或文件名都不是 camelCase 风格的": "很多 api 或文件名都不是 camelCase 风格的",
  "注释的首字母必须大写": "注释的首字母必须大写",
  "在类的非静态方法中，必须存在对 this 的引用": "在类的非静态方法中，必须存在对 this 的引用",
  "禁止函数的循环复杂度超过 20": "禁止函数的循环复杂度超过 20",
  "https://en.wikipedia.org/wiki/Cyclomatic_complexity": "https://en.wikipedia.org/wiki/Cyclomatic_complexity",
  "禁止函数在不同分支返回不同类型的值": "禁止函数在不同分支返回不同类型的值",
  "缺少 TypeScript 的支持，类型判断是不准确的": "缺少 TypeScript 的支持，类型判断是不准确的",
  "限制 this 的别名": "限制 this 的别名",
  "constructor 中必须有 super": "constructor 中必须有 super",
  "switch 语句必须有 default": "switch 语句必须有 default",
  "switch 语句中的 default 必须在最后": "switch 语句中的 default 必须在最后",
  "有默认值的参数必须放在函数参数的末尾": "有默认值的参数必须放在函数参数的末尾",
  "禁止使用 foo['bar']，必须写成 foo.bar": "禁止使用 foo['bar']，必须写成 foo.bar",
  "当需要写一系列属性的时候，可以更统一": "当需要写一系列属性的时候，可以更统一",
  "必须使用 === 或 !==，禁止使用 == 或 !=": "必须使用 === 或 !==，禁止使用 == 或 !=",
  "禁止方向错误的 for 循环": "禁止方向错误的 for 循环",
  "函数赋值给变量的时候，函数名必须与变量名一致": "函数赋值给变量的时候，函数名必须与变量名一致",
  "函数必须有名字": "函数必须有名字",
  "必须只使用函数声明或只使用函数表达式": "必须只使用函数声明或只使用函数表达式",
  "getter 必须有返回值，并且禁止返回空": "getter 必须有返回值，并且禁止返回空",
  "setter 和 getter 必须写在一起": "setter 和 getter 必须写在一起",
  "for in 内部必须有 hasOwnProperty": "for in 内部必须有 hasOwnProperty",
  "禁止使用指定的标识符": "禁止使用指定的标识符",
  "限制变量名长度": "限制变量名长度",
  "限制变量名必须匹配指定的正则表达式": "限制变量名必须匹配指定的正则表达式",
  "变量必须在定义的时候赋值": "变量必须在定义的时候赋值",
  "单行注释必须写在上一行": "单行注释必须写在上一行",
  "类的成员之间是否需要空行": "类的成员之间是否需要空行",
  "有时为了紧凑需要挨在一起，有时为了可读性需要空一行": "有时为了紧凑需要挨在一起，有时为了可读性需要空一行",
  "使用 a ||= b 替代 a = a || b": "使用 a ||= b 替代 a = a || b",
  "限制一个文件中类的数量": "限制一个文件中类的数量",
  "代码块嵌套的深度禁止超过 3 层": "代码块嵌套的深度禁止超过 3 层",
  "限制一个文件最多的行数": "限制一个文件最多的行数",
  "限制函数块中的代码行数": "限制函数块中的代码行数",
  "回调函数嵌套禁止超过 3 层，多了请用 async await 替代": "回调函数嵌套禁止超过 3 层，多了请用 async await 替代",
  "函数的参数禁止超过 3 个": "函数的参数禁止超过 3 个",
  "限制函数块中的语句数量": "限制函数块中的语句数量",
  "限制一行中的语句数量": "限制一行中的语句数量",
  "约束多行注释的格式": "约束多行注释的格式",
  "能写注释已经不容易了，不需要限制太多": "能写注释已经不容易了，不需要限制太多",
  "new 后面的类名必须首字母大写": "new 后面的类名必须首字母大写",
  "禁止使用 alert": "禁止使用 alert",
  "禁止使用 Array 构造函数时传入的参数超过一个": "禁止使用 Array 构造函数时传入的参数超过一个",
  "参数为一个时表示创建一个指定长度的数组，比较常用\n参数为多个时表示创建一个指定内容的数组，此时可以用数组字面量实现，不必使用构造函数": "参数为一个时表示创建一个指定长度的数组，比较常用\n参数为多个时表示创建一个指定内容的数组，此时可以用数组字面量实现，不必使用构造函数",
  "禁止将 async 函数做为 new Promise 的回调函数": "禁止将 async 函数做为 new Promise 的回调函数",
  "出现这种情况时，一般不需要使用 new Promise 实现异步了": "出现这种情况时，一般不需要使用 new Promise 实现异步了",
  "禁止将 await 写在循环里，因为这样就无法同时发送多个异步请求了": "禁止将 await 写在循环里，因为这样就无法同时发送多个异步请求了",
  "要求太严格了，有时需要在循环中写 await": "要求太严格了，有时需要在循环中写 await",
  "禁止使用位运算": "禁止使用位运算",
  "禁止使用 caller 或 callee": "禁止使用 caller 或 callee",
  "它们是已废弃的语法": "它们是已废弃的语法",
  "switch 的 case 内有变量定义的时候，必须使用大括号将 case 内变成一个代码块": "switch 的 case 内有变量定义的时候，必须使用大括号将 case 内变成一个代码块",
  "禁止对已定义的 class 重新赋值": "禁止对已定义的 class 重新赋值",
  "禁止与负零进行比较": "禁止与负零进行比较",
  "禁止在测试表达式中使用赋值语句，除非这个赋值语句被括号包起来了": "禁止在测试表达式中使用赋值语句，除非这个赋值语句被括号包起来了",
  "谨慎使用 console": "谨慎使用 console",
  "禁止对使用 const 定义的常量重新赋值": "禁止对使用 const 定义的常量重新赋值",
  "禁止出现不影响值的表达式": "禁止出现不影响值的表达式",
  "禁止将常量作为分支条件判断中的测试表达式，但允许作为循环条件判断中的测试表达式": "禁止将常量作为分支条件判断中的测试表达式，但允许作为循环条件判断中的测试表达式",
  "禁止在构造函数中返回值": "禁止在构造函数中返回值",
  "禁止使用 continue": "禁止使用 continue",
  "禁止在正则表达式中出现 Ctrl 键的 ASCII 表示，即禁止使用 /\\x1f/": "禁止在正则表达式中出现 Ctrl 键的 ASCII 表示，即禁止使用 /\\x1f/",
  "几乎不会遇到这种场景": "几乎不会遇到这种场景",
  "禁止使用 debugger": "禁止使用 debugger",
  "禁止对一个变量使用 delete": "禁止对一个变量使用 delete",
  "编译阶段就会报错了": "编译阶段就会报错了",
  "禁止在正则表达式中出现形似除法操作符的开头，如 let a = /=foo/": "禁止在正则表达式中出现形似除法操作符的开头，如 let a = /=foo/",
  "有代码高亮的话，在阅读这种代码时，也完全不会产生歧义或理解上的困难": "有代码高亮的话，在阅读这种代码时，也完全不会产生歧义或理解上的困难",
  "禁止在函数参数中出现重复名称的参数": "禁止在函数参数中出现重复名称的参数",
  "禁止重复定义类的成员": "禁止重复定义类的成员",
  "禁止 if else 的条件判断中出现重复的条件": "禁止 if else 的条件判断中出现重复的条件",
  "禁止在对象字面量中出现重复的键名": "禁止在对象字面量中出现重复的键名",
  "禁止在 switch 语句中出现重复测试表达式的 case": "禁止在 switch 语句中出现重复测试表达式的 case",
  "禁止重复导入模块": "禁止重复导入模块",
  "禁止在 else 内使用 return，必须改为提前结束": "禁止在 else 内使用 return，必须改为提前结束",
  "else 中使用 return 可以使代码结构更清晰": "else 中使用 return 可以使代码结构更清晰",
  "禁止出现空代码块，允许 catch 为空代码块": "禁止出现空代码块，允许 catch 为空代码块",
  "禁止在正则表达式中使用空的字符集 []": "禁止在正则表达式中使用空的字符集 []",
  "不允许有空函数": "不允许有空函数",
  "有时需要将一个空函数设置为某个项的默认值": "有时需要将一个空函数设置为某个项的默认值",
  "禁止解构赋值中出现空 {} 或 []": "禁止解构赋值中出现空 {} 或 []",
  "禁止 class 中出现空的 static 代码块": "禁止 class 中出现空的 static 代码块",
  "禁止使用 foo == null，必须使用 foo === null": "禁止使用 foo == null，必须使用 foo === null",
  "禁止使用 eval": "禁止使用 eval",
  "禁止将 catch 的第一个参数 error 重新赋值": "禁止将 catch 的第一个参数 error 重新赋值",
  "禁止修改原生对象": "禁止修改原生对象",
  "修改原生对象可能会与将来版本的 js 冲突": "修改原生对象可能会与将来版本的 js 冲突",
  "禁止出现没必要的 bind": "禁止出现没必要的 bind",
  "禁止不必要的布尔类型转换": "禁止不必要的布尔类型转换",
  "禁止出现没必要的 label": "禁止出现没必要的 label",
  "已经禁止使用 label 了": "已经禁止使用 label 了",
  "switch 的 case 内必须有 break, return 或 throw，空的 case 除外": "switch 的 case 内必须有 break, return 或 throw，空的 case 除外",
  "禁止将一个函数声明重新赋值": "禁止将一个函数声明重新赋值",
  "禁止对全局变量赋值": "禁止对全局变量赋值",
  "禁止使用 ~+ 等难以理解的类型转换，仅允许使用 !!": "禁止使用 ~+ 等难以理解的类型转换，仅允许使用 !!",
  "禁止在全局作用域下定义变量或申明函数": "禁止在全局作用域下定义变量或申明函数",
  "模块化之后，不会出现这种在全局作用域下定义变量的情况": "模块化之后，不会出现这种在全局作用域下定义变量的情况",
  "禁止在 setTimeout 或 setInterval 中传入字符串": "禁止在 setTimeout 或 setInterval 中传入字符串",
  "禁止对导入的模块进行赋值": "禁止对导入的模块进行赋值",
  "禁止在代码后添加单行注释": "禁止在代码后添加单行注释",
  "禁止在 if 代码块内出现函数声明": "禁止在 if 代码块内出现函数声明",
  "禁止在 RegExp 构造函数中出现非法的正则表达式": "禁止在 RegExp 构造函数中出现非法的正则表达式",
  "禁止在类之外的地方使用 this": "禁止在类之外的地方使用 this",
  "只允许在 class 中使用 this": "只允许在 class 中使用 this",
  "禁止使用特殊空白符（比如全角空格），除非是出现在字符串、正则表达式或模版字符串中": "禁止使用特殊空白符（比如全角空格），除非是出现在字符串、正则表达式或模版字符串中",
  "禁止使用 __iterator__": "禁止使用 __iterator__",
  "__iterator__ 是一个已废弃的属性\n使用 [Symbol.iterator] 替代它": "__iterator__ 是一个已废弃的属性\n使用 [Symbol.iterator] 替代它",
  "禁止 label 名称与已定义的变量重复": "禁止 label 名称与已定义的变量重复",
  "禁止使用 label": "禁止使用 label",
  "禁止使用没必要的 {} 作为代码块": "禁止使用没必要的 {} 作为代码块",
  "禁止 else 中只有一个单独的 if": "禁止 else 中只有一个单独的 if",
  "单独的 if 可以把逻辑表达的更清楚": "单独的 if 可以把逻辑表达的更清楚",
  "禁止在循环内的函数内部出现循环体条件语句中定义的变量": "禁止在循环内的函数内部出现循环体条件语句中定义的变量",
  "使用 let 就已经解决了这个问题了": "使用 let 就已经解决了这个问题了",
  "禁止使用超出 js 精度范围的数字": "禁止使用超出 js 精度范围的数字",
  "禁止使用 magic numbers": "禁止使用 magic numbers",
  "禁止正则表达式中使用肉眼无法区分的特殊字符": "禁止正则表达式中使用肉眼无法区分的特殊字符",
  "某些特殊字符很难看出差异，最好不要在正则中使用": "某些特殊字符很难看出差异，最好不要在正则中使用",
  "禁止连续赋值，比如 foo = bar = 1": "禁止连续赋值，比如 foo = bar = 1",
  "禁止使用 \\ 来换行字符串": "禁止使用 \\ 来换行字符串",
  "禁止 if 里有否定的表达式": "禁止 if 里有否定的表达式",
  "否定的表达式可以把逻辑表达的更清楚": "否定的表达式可以把逻辑表达的更清楚",
  "禁止使用嵌套的三元表达式，比如 a ? b : c ? d : e": "禁止使用嵌套的三元表达式，比如 a ? b : c ? d : e",
  "禁止直接 new 一个类而不赋值": "禁止直接 new 一个类而不赋值",
  "new 应该作为创建一个类的实例的方法，所以不能不赋值": "new 应该作为创建一个类的实例的方法，所以不能不赋值",
  "禁止使用 new Function": "禁止使用 new Function",
  "这和 eval 是等价的": "这和 eval 是等价的",
  "禁止错误的使用 new 来实例化一个非构造函数": "禁止错误的使用 new 来实例化一个非构造函数",
  "禁止直接 new Object": "禁止直接 new Object",
  "禁止使用 new 来生成 Symbol": "禁止使用 new 来生成 Symbol",
  "禁止使用 new 来生成 String, Number 或 Boolean": "禁止使用 new 来生成 String, Number 或 Boolean",
  "禁止在字符串中使用 \\8 \\9": "禁止在字符串中使用 \\8 \\9",
  "禁止将 Math, JSON 或 Reflect 直接作为函数调用": "禁止将 Math, JSON 或 Reflect 直接作为函数调用",
  "禁止使用 0 开头的数字表示八进制数": "禁止使用 0 开头的数字表示八进制数",
  "禁止使用八进制的转义符": "禁止使用八进制的转义符",
  "禁止对函数的参数重新赋值": "禁止对函数的参数重新赋值",
  "禁止使用 ++ 或 --": "禁止使用 ++ 或 --",
  "禁止在 Promise 的回调函数中直接 return": "禁止在 Promise 的回调函数中直接 return",
  "禁止使用 __proto__": "禁止使用 __proto__",
  "__proto__ 是已废弃的语法": "__proto__ 是已废弃的语法",
  "禁止使用 hasOwnProperty, isPrototypeOf 或 propertyIsEnumerable": "禁止使用 hasOwnProperty, isPrototypeOf 或 propertyIsEnumerable",
  "hasOwnProperty 比较常用": "hasOwnProperty 比较常用",
  "禁止重复定义变量": "禁止重复定义变量",
  "禁用 var 之后，编译阶段就会报错了": "禁用 var 之后，编译阶段就会报错了",
  "禁止在正则表达式中出现连续的空格": "禁止在正则表达式中出现连续的空格",
  "禁止导出指定的变量名": "禁止导出指定的变量名",
  "禁止使用指定的全局变量": "禁止使用指定的全局变量",
  "禁止导入指定的模块": "禁止导入指定的模块",
  "禁止使用指定的对象属性": "禁止使用指定的对象属性",
  "禁止使用指定的语法": "禁止使用指定的语法",
  "禁止在 return 语句里赋值": "禁止在 return 语句里赋值",
  "禁止在 return 语句里使用 await": "禁止在 return 语句里使用 await",
  "禁止出现 location.href = 'javascript:void(0)';": "禁止出现 location.href = 'javascript:void(0)';",
  "有些场景下还是需要用到这个": "有些场景下还是需要用到这个",
  "禁止将自己赋值给自己": "禁止将自己赋值给自己",
  "禁止将自己与自己比较": "禁止将自己与自己比较",
  "禁止使用逗号操作符": "禁止使用逗号操作符",
  "禁止 setter 有返回值": "禁止 setter 有返回值",
  "禁止变量名与上层作用域内的已定义的变量重复": "禁止变量名与上层作用域内的已定义的变量重复",
  "很多时候函数的形参和传参是同名的": "很多时候函数的形参和传参是同名的",
  "禁止使用保留字作为变量名": "禁止使用保留字作为变量名",
  "禁止在数组中出现连续的逗号": "禁止在数组中出现连续的逗号",
  "禁止在普通字符串中出现模版字符串里的变量形式": "禁止在普通字符串中出现模版字符串里的变量形式",
  "禁止使用三元表达式": "禁止使用三元表达式",
  "禁止在 super 被调用之前使用 this 或 super": "禁止在 super 被调用之前使用 this 或 super",
  "禁止 throw 字面量，必须 throw 一个 Error 对象": "禁止 throw 字面量，必须 throw 一个 Error 对象",
  "禁止使用未定义的变量": "禁止使用未定义的变量",
  "禁止将 undefined 赋值给变量": "禁止将 undefined 赋值给变量",
  "禁止使用 undefined": "禁止使用 undefined",
  "禁止变量名出现下划线": "禁止变量名出现下划线",
  "循环内必须对循环条件中的变量有修改": "循环内必须对循环条件中的变量有修改",
  "必须使用 !a 替代 a ? false : true": "必须使用 !a 替代 a ? false : true",
  "后者表达的更清晰": "后者表达的更清晰",
  "禁止在 return, throw, break 或 continue 之后还有代码": "禁止在 return, throw, break 或 continue 之后还有代码",
  "禁止在第一轮循环时就一定会退出循环的情况出现": "禁止在第一轮循环时就一定会退出循环的情况出现",
  "禁止在 finally 中出现 return, throw, break 或 continue": "禁止在 finally 中出现 return, throw, break 或 continue",
  "finally 中的语句会在 try 之前执行": "finally 中的语句会在 try 之前执行",
  "禁止在 in 或 instanceof 操作符的左侧变量前使用感叹号": "禁止在 in 或 instanceof 操作符的左侧变量前使用感叹号",
  "禁止使用不安全的 optional chaining": "禁止使用不安全的 optional chaining",
  "禁止无用的表达式": "禁止无用的表达式",
  "禁止出现没用到的 label": "禁止出现没用到的 label",
  "禁止类出现未使用的私有成员": "禁止类出现未使用的私有成员",
  "已定义的变量必须使用": "已定义的变量必须使用",
  "变量必须先定义后使用": "变量必须先定义后使用",
  "禁止正则表达式中出现无用的回溯引用": "禁止正则表达式中出现无用的回溯引用",
  "某些回溯引用语法上没问题，但是会永远匹配到空字符串": "某些回溯引用语法上没问题，但是会永远匹配到空字符串",
  "禁止出现没必要的 call 或 apply": "禁止出现没必要的 call 或 apply",
  "禁止在 catch 中仅仅只是把错误 throw 出去": "禁止在 catch 中仅仅只是把错误 throw 出去",
  "这样的 catch 是没有意义的，等价于直接执行 try 里的代码": "这样的 catch 是没有意义的，等价于直接执行 try 里的代码",
  "禁止出现没必要的计算键名": "禁止出现没必要的计算键名",
  "禁止出现没必要的字符串连接": "禁止出现没必要的字符串连接",
  "禁止出现没必要的 constructor": "禁止出现没必要的 constructor",
  "禁止出现没必要的转义": "禁止出现没必要的转义",
  "转义可以使代码更易懂": "转义可以使代码更易懂",
  "禁止解构赋值时出现同样名字的的重命名，比如 let { foo: foo } = bar;": "禁止解构赋值时出现同样名字的的重命名，比如 let { foo: foo } = bar;",
  "禁止没必要的 return": "禁止没必要的 return",
  "禁止使用 var": "禁止使用 var",
  "禁止使用 void": "禁止使用 void",
  "禁止注释中出现 TODO 和 FIXME": "禁止注释中出现 TODO 和 FIXME",
  "禁止使用 with": "禁止使用 with",
  "必须使用 a = {b} 而不是 a = {b: b}": "必须使用 a = {b} 而不是 a = {b: b}",
  "有时后者可以使代码结构更清晰": "有时后者可以使代码结构更清晰",
  "禁止变量申明时用逗号一次申明多个": "禁止变量申明时用逗号一次申明多个",
  "必须使用 x = x + y 而不是 x += y": "必须使用 x = x + y 而不是 x += y",
  "限制语句之间的空行规则，比如变量定义完之后必须要空行": "限制语句之间的空行规则，比如变量定义完之后必须要空行",
  "回调函数必须使用箭头函数": "回调函数必须使用箭头函数",
  "申明后不再被修改的变量必须使用 const 来申明": "申明后不再被修改的变量必须使用 const 来申明",
  "必须使用解构赋值": "必须使用解构赋值",
  "使用 ES2016 的语法 ** 替代 Math.pow": "使用 ES2016 的语法 ** 替代 Math.pow",
  "使用 ES2018 中的正则表达式命名组": "使用 ES2018 中的正则表达式命名组",
  "正则表达式已经较难理解了，没必要强制加上命名组": "正则表达式已经较难理解了，没必要强制加上命名组",
  "必须使用 0b11111011 而不是 parseInt()": "必须使用 0b11111011 而不是 parseInt()",
  "使用 Object.hasOwn() 而不是 Object.prototype.hasOwnProperty.call()": "使用 Object.hasOwn() 而不是 Object.prototype.hasOwnProperty.call()",
  "必须使用 ... 而不是 Object.assign，除非 Object.assign 的第一个参数是一个变量": "必须使用 ... 而不是 Object.assign，除非 Object.assign 的第一个参数是一个变量",
  "Promise 的 reject 中必须传入 Error 对象，而不是字面量": "Promise 的 reject 中必须传入 Error 对象，而不是字面量",
  "优先使用正则表达式字面量，而不是 RegExp 构造函数": "优先使用正则表达式字面量，而不是 RegExp 构造函数",
  "必须使用 ...args 而不是 arguments": "必须使用 ...args 而不是 arguments",
  "必须使用 ... 而不是 apply，比如 foo(...args)": "必须使用 ... 而不是 apply，比如 foo(...args)",
  "必须使用模版字符串而不是字符串连接": "必须使用模版字符串而不是字符串连接",
  "parseInt 必须传入第二个参数": "parseInt 必须传入第二个参数",
  "禁止将 await 或 yield 的结果做为运算符的后面项": "禁止将 await 或 yield 的结果做为运算符的后面项",
  "这样会导致不符合预期的结果\nhttps://github.com/eslint/eslint/issues/11899\n在上面 issue 修复之前，关闭此规则": "这样会导致不符合预期的结果\nhttps://github.com/eslint/eslint/issues/11899\n在上面 issue 修复之前，关闭此规则",
  "async 函数中必须存在 await 语句": "async 函数中必须存在 await 语句",
  "正则表达式中必须要加上 u 标志": "正则表达式中必须要加上 u 标志",
  "generator 函数内必须有 yield": "generator 函数内必须有 yield",
  "导入必须按规则排序": "导入必须按规则排序",
  "对象字面量的键名必须排好序": "对象字面量的键名必须排好序",
  "变量申明必须排好序": "变量申明必须排好序",
  "注释的斜线或 * 后必须有空格": "注释的斜线或 * 后必须有空格",
  "禁止使用 'strict';": "禁止使用 'strict';",
  "创建 Symbol 时必须传入参数": "创建 Symbol 时必须传入参数",
  "必须使用 isNaN(foo) 而不是 foo === NaN": "必须使用 isNaN(foo) 而不是 foo === NaN",
  "typeof 表达式比较的对象必须是 'undefined', 'object', 'boolean', 'number', 'string', 'function', 'symbol', 或 'bigint'": "typeof 表达式比较的对象必须是 'undefined', 'object', 'boolean', 'number', 'string', 'function', 'symbol', 或 'bigint'",
  "var 必须在作用域的最前面": "var 必须在作用域的最前面",
  "必须使用 if (foo === 5) 而不是 if (5 === foo)": "必须使用 if (foo === 5) 而不是 if (5 === foo)",
  "布尔值类型的 propTypes 的 name 必须为 is 或 has 开头": "布尔值类型的 propTypes 的 name 必须为 is 或 has 开头",
  "类型相关的约束交给 TypeScript": "类型相关的约束交给 TypeScript",
  "<button> 必须有 type 属性": "<button> 必须有 type 属性",
  "一个 defaultProps 必须有对应的 propTypes": "一个 defaultProps 必须有对应的 propTypes",
  "props, state, context 必须用解构赋值": "props, state, context 必须用解构赋值",
  "组件必须有 displayName 属性": "组件必须有 displayName 属性",
  "不强制要求写 displayName": "不强制要求写 displayName",
  "禁止在自定义组件中使用指定的 props": "禁止在自定义组件中使用指定的 props",
  "禁止在 dom 组件中使用指定的 props": "禁止在 dom 组件中使用指定的 props",
  "禁止使用指定的组件": "禁止使用指定的组件",
  "禁止使用另一个组件的 propTypes": "禁止使用另一个组件的 propTypes",
  "禁止使用 PropTypes.any PropTypes.array 和 PropTypes.object": "禁止使用 PropTypes.any PropTypes.array 和 PropTypes.object",
  "限制函数式组件的函数形式（函数声明、函数表达式或箭头函数）": "限制函数式组件的函数形式（函数声明、函数表达式或箭头函数）",
  "一些场景还不能覆盖，如 export default function，自动修复功能在 ts 中有些问题": "一些场景还不能覆盖，如 export default function，自动修复功能在 ts 中有些问题",
  "hook 的返回值必须与 useState 的解构对应": "hook 的返回值必须与 useState 的解构对应",
  "iframe 组件必须添加 sandbox 属性": "iframe 组件必须添加 sandbox 属性",
  "布尔值的属性必须显式的声明值为 true": "布尔值的属性必须显式的声明值为 true",
  "禁止 jsx 中使用无用的引号": "禁止 jsx 中使用无用的引号",
  "限制文件后缀": "限制文件后缀",
  "必须使用 <></> 而不是 React.Fragment": "必须使用 <></> 而不是 React.Fragment",
  "<></> 不需要额外引入 Fragment 组件": "<></> 不需要额外引入 Fragment 组件",
  "handler 的名称必须是 onXXX 或 handleXXX": "handler 的名称必须是 onXXX 或 handleXXX",
  "数组中的 jsx 必须有 key": "数组中的 jsx 必须有 key",
  "限制 jsx 层级": "限制 jsx 层级",
  "jsx 中禁止使用 bind": "jsx 中禁止使用 bind",
  "禁止在 jsx 中使用像注释的字符串": "禁止在 jsx 中使用像注释的字符串",
  "禁止使用不稳定的值作为 Context.Provider 的 value": "禁止使用不稳定的值作为 Context.Provider 的 value",
  "禁止出现重复的 props": "禁止出现重复的 props",
  "使用 && 渲染组件时，禁止条件是 0 '' 或 NaN": "使用 && 渲染组件时，禁止条件是 0 '' 或 NaN",
  "禁止在 jsx 中出现字符串": "禁止在 jsx 中出现字符串",
  "禁止出现 href=\"javascript:void(0)\"": "禁止出现 href=\"javascript:void(0)\"",
  "React 已经有 warning 了，并且会在将来禁止此类属性值": "React 已经有 warning 了，并且会在将来禁止此类属性值",
  "禁止使用 target=\"_blank\"": "禁止使用 target=\"_blank\"",
  "禁止使用未定义的组件": "禁止使用未定义的组件",
  "禁止无意义的 Fragment 组件": "禁止无意义的 Fragment 组件",
  "组件的名称必须符合 PascalCase": "组件的名称必须符合 PascalCase",
  "禁止使用 {...props}": "禁止使用 {...props}",
  "defaultProps 必须按字母排序": "defaultProps 必须按字母排序",
  "props 必须按字母排序": "props 必须按字母排序",
  "修复 React 被误报为未使用的变量的问题（仅在开启 no-unused-vars 时有效）": "修复 React 被误报为未使用的变量的问题（仅在开启 no-unused-vars 时有效）",
  "修复 no-unused-vars 不检查 jsx 的问题": "修复 no-unused-vars 不检查 jsx 的问题",
  "禁止在 setState 中使用 this.state": "禁止在 setState 中使用 this.state",
  "两个 inline 元素之间必须有空格，否则视觉上它们就贴在一起了": "两个 inline 元素之间必须有空格，否则视觉上它们就贴在一起了",
  "这是样式的问题，不应该由空格约束": "这是样式的问题，不应该由空格约束",
  "禁止使用数组的索引作为 key": "禁止使用数组的索引作为 key",
  "类组件中的生命周期函数不要使用箭头函数": "类组件中的生命周期函数不要使用箭头函数",
  "禁止将 children 作为一个 prop": "禁止将 children 作为一个 prop",
  "禁止使用 dangerouslySetInnerHTML": "禁止使用 dangerouslySetInnerHTML",
  "禁止在使用了 dangerouslySetInnerHTML 的组件内添加 children": "禁止在使用了 dangerouslySetInnerHTML 的组件内添加 children",
  "禁止使用已废弃的 api": "禁止使用已废弃的 api",
  "禁止在 componentDidMount 里使用 setState": "禁止在 componentDidMount 里使用 setState",
  "同构应用需要在 didMount 里使用 setState": "同构应用需要在 didMount 里使用 setState",
  "禁止在 componentDidUpdate 里使用 setState": "禁止在 componentDidUpdate 里使用 setState",
  "禁止直接修改 this.state": "禁止直接修改 this.state",
  "禁止使用 findDOMNode": "禁止使用 findDOMNode",
  "禁用指定的 html 属性": "禁用指定的 html 属性",
  "需要指定特定属性时才需要开启": "需要指定特定属性时才需要开启",
  "禁止使用 isMounted": "禁止使用 isMounted",
  "它是已废弃的语法": "它是已废弃的语法",
  "禁止在一个文件创建两个组件": "禁止在一个文件创建两个组件",
  "有一个 bug：https://github.com/yannickcr/eslint-plugin-react/issues/1181": "有一个 bug：https://github.com/yannickcr/eslint-plugin-react/issues/1181",
  "禁止在 jsx 中使用命名空间": "禁止在 jsx 中使用命名空间",
  "禁止在 React.PureComponent 中使用 shouldComponentUpdate": "禁止在 React.PureComponent 中使用 shouldComponentUpdate",
  "禁止使用 ReactDOM.render 的返回值": "禁止使用 ReactDOM.render 的返回值",
  "禁止使用 setState": "禁止使用 setState",
  "禁止使用字符串 ref": "禁止使用字符串 ref",
  "禁止在函数组件中使用 this": "禁止在函数组件中使用 this",
  "禁止组件的属性或生命周期大小写错误": "禁止组件的属性或生命周期大小写错误",
  "禁止在组件的内部存在未转义的 >, \", ' 或 }": "禁止在组件的内部存在未转义的 >, \", ' 或 }",
  "禁止出现 HTML 中的属性，如 class": "禁止出现 HTML 中的属性，如 class",
  "禁止使用不安全的生命周期方法 componentWillMount, componentWillReceiveProps, componentWillUpdate": "禁止使用不安全的生命周期方法 componentWillMount, componentWillReceiveProps, componentWillUpdate",
  "禁止在组件内使用不稳定的组件": "禁止在组件内使用不稳定的组件",
  "禁止在类组件中定义未使用的方法": "禁止在类组件中定义未使用的方法",
  "禁止出现未使用的 propTypes": "禁止出现未使用的 propTypes",
  "已定义的 state 必须使用": "已定义的 state 必须使用",
  "没有官方文档，并且存在很多 bug：https://github.com/yannickcr/eslint-plugin-react/search?q=no-unused-state&type=Issues&utf8=%E2%9C%93": "没有官方文档，并且存在很多 bug：https://github.com/yannickcr/eslint-plugin-react/search?q=no-unused-state&type=Issues&utf8=%E2%9C%93",
  "禁止在 componentWillUpdate 中使用 setState": "禁止在 componentWillUpdate 中使用 setState",
  "已经禁止使用 componentWillUpdate 了": "已经禁止使用 componentWillUpdate 了",
  "必须使用 Class 的形式创建组件": "必须使用 Class 的形式创建组件",
  "使用 Flow 时，props 必须设置为精确的类型": "使用 Flow 时，props 必须设置为精确的类型",
  "使用 Flow 时，props 必须设置为只读的": "使用 Flow 时，props 必须设置为只读的",
  "必须使用函数式组件": "必须使用函数式组件",
  "组件必须写 propTypes": "组件必须写 propTypes",
  "出现 jsx 的地方必须导入 React": "出现 jsx 的地方必须导入 React",
  "已经在 no-undef 中限制了": "已经在 no-undef 中限制了",
  "非 required 的 prop 必须有 defaultProps": "非 required 的 prop 必须有 defaultProps",
  "组件必须有 shouldComponentUpdate": "组件必须有 shouldComponentUpdate",
  "render 方法中必须有返回值": "render 方法中必须有返回值",
  "组件内没有 children 时，必须使用自闭和写法": "组件内没有 children 时，必须使用自闭和写法",
  "组件内方法必须按照一定规则排序": "组件内方法必须按照一定规则排序",
  "propTypes 的属性必须按照字母排序": "propTypes 的属性必须按照字母排序",
  "必须在构造函数中初始化 state": "必须在构造函数中初始化 state",
  "类的静态属性必须使用 static 关键字定义": "类的静态属性必须使用 static 关键字定义",
  "style 属性的取值必须是 object": "style 属性的取值必须是 object",
  "img, br 标签中禁止有 children": "img, br 标签中禁止有 children",
  "限制自定义组件的属性风格": "限制自定义组件的属性风格",
  "标签属性必须按规则排序": "标签属性必须按规则排序",
  "<script> 标签必须有 lang 属性": "<script> 标签必须有 lang 属性",
  "支持在模版中使用 eslint-disable-next-line 等注释": "支持在模版中使用 eslint-disable-next-line 等注释",
  "限制组件接口定义的模式": "限制组件接口定义的模式",
  "组件的 name 属性必须符合 PascalCase": "组件的 name 属性必须符合 PascalCase",
  "这是官方建议的规范": "这是官方建议的规范",
  "限制组件名的风格": "限制组件名的风格",
  "限制组件名称的命名规范": "限制组件名称的命名规范",
  "组件中必须按照 <script>, <template>, <style> 排序": "组件中必须按照 <script>, <template>, <style> 排序",
  "这是官方建议的顺序": "这是官方建议的顺序",
  "自定义事件名必须用 camelCase 风格": "自定义事件名必须用 camelCase 风格",
  "约束 defineEmits 定义 emit 的格式": "约束 defineEmits 定义 emit 的格式",
  "必须按规则排序 defineEmits 和 defineProps": "必须按规则排序 defineEmits 和 defineProps",
  "约束 defineProps 定义 props 的格式": "约束 defineProps 定义 props 的格式",
  "标签的第一个属性必须换行": "标签的第一个属性必须换行",
  "button 标签必须有 type 属性": "button 标签必须有 type 属性",
  "HTML 注释的 <!-- 后必须有空格或换行符": "HTML 注释的 <!-- 后必须有空格或换行符",
  "HTML 注释必须有首位空格": "HTML 注释必须有首位空格",
  "HTML 注释缩进必须有两个空格": "HTML 注释缩进必须有两个空格",
  "组件名称必须和文件名一致": "组件名称必须和文件名一致",
  "导出的组件名称必须保持一致性": "导出的组件名称必须保持一致性",
  "组件名称必须是两个以上的单词": "组件名称必须是两个以上的单词",
  "多行属性之间必须有空行": "多行属性之间必须有空行",
  "nextTick 必须使用 Promise 模式调用": "nextTick 必须使用 Promise 模式调用",
  "watch 中禁止使用箭头函数": "watch 中禁止使用箭头函数",
  "计算属性禁止包含异步方法": "计算属性禁止包含异步方法",
  "禁止 <template> 中使用字符串": "禁止 <template> 中使用字符串",
  "禁止给布尔值 props 添加默认值": "禁止给布尔值 props 添加默认值",
  "禁止有 v-html 或 v-text 属性的标签内部还有内容": "禁止有 v-html 或 v-text 属性的标签内部还有内容",
  "禁止 data() 中有计算属性": "禁止 data() 中有计算属性",
  "禁止在 data 中使用已废弃的对象定义": "禁止在 data 中使用已废弃的对象定义",
  "禁止使用已废弃的 destroyed 和 beforeDestroy 生命周期": "禁止使用已废弃的 destroyed 和 beforeDestroy 生命周期",
  "禁止使用已废弃的 $listeners": "禁止使用已废弃的 $listeners",
  "禁止使用已废弃的 $scopedSlots": "禁止使用已废弃的 $scopedSlots",
  "禁止使用已废弃的 events 接口": "禁止使用已废弃的 events 接口",
  "禁止使用已废弃的 filters 语法": "禁止使用已废弃的 filters 语法",
  "禁止使用已废弃的 functional 模版": "禁止使用已废弃的 functional 模版",
  "禁止使用已废弃的 is 属性": "禁止使用已废弃的 is 属性",
  "禁止使用已废弃的 inline-template 属性": "禁止使用已废弃的 inline-template 属性",
  "禁止使用已废弃的 this": "禁止使用已废弃的 this",
  "禁止使用已废弃的 tag 属性": "禁止使用已废弃的 tag 属性",
  "禁用已废弃的 scope 属性": "禁用已废弃的 scope 属性",
  "使用 v-slot 替代已废弃的 slot": "使用 v-slot 替代已废弃的 slot",
  "禁用已废弃的 slot-scope": "禁用已废弃的 slot-scope",
  "禁止在 v-bind 指令中使用已废弃的 .sync 修饰符": "禁止在 v-bind 指令中使用已废弃的 .sync 修饰符",
  "禁用已废弃的 v-is 指令": "禁用已废弃的 v-is 指令",
  "禁止使用已废弃的 .native 修饰符": "禁止使用已废弃的 .native 修饰符",
  "禁止使用已废弃的数字修饰符": "禁止使用已废弃的数字修饰符",
  "禁止使用已废弃的 Vue.config.keyCodes": "禁止使用已废弃的 Vue.config.keyCodes",
  "禁止重复的键名": "禁止重复的键名",
  "禁止在 v-if 和 v-else-if 中出现重复的测试表达式": "禁止在 v-if 和 v-else-if 中出现重复的测试表达式",
  "使用 v-bind=\"$attrs\" 时 inheritAttrs 必须是 false": "使用 v-bind=\"$attrs\" 时 inheritAttrs 必须是 false",
  "禁止出现重复的属性": "禁止出现重复的属性",
  "禁止 <template> <script> <style> 为空": "禁止 <template> <script> <style> 为空",
  "禁止在 <script setup> 中使用 export": "禁止在 <script setup> 中使用 export",
  "禁止在 await 之后调用 expose": "禁止在 await 之后调用 expose",
  "禁止使用特殊空白符（比如全角空格），除非是出现在字符串、正则表达式、模版字符串中或 HTML 内容中": "禁止使用特殊空白符（比如全角空格），除非是出现在字符串、正则表达式、模版字符串中或 HTML 内容中",
  "禁止异步注册生命周期": "禁止异步注册生命周期",
  "禁止出现没必要的 <template>": "禁止出现没必要的 <template>",
  "禁止 class 中出现复数的对象": "禁止 class 中出现复数的对象",
  "禁止给 scoped slots 传递多个参数": "禁止给 scoped slots 传递多个参数",
  "禁止修改组件的 props": "禁止修改组件的 props",
  "禁止出现语法错误": "禁止出现语法错误",
  "禁止潜在的拼写错误": "禁止潜在的拼写错误",
  "禁止直接使用由 ref 生成的变量，必须使用它的 value": "禁止直接使用由 ref 生成的变量，必须使用它的 value",
  "禁止解构 ref": "禁止解构 ref",
  "禁止将有默认值的 prop 设为必选属性": "禁止将有默认值的 prop 设为必选属性",
  "组件的 name 属性禁止使用保留字": "组件的 name 属性禁止使用保留字",
  "禁止覆盖保留字": "禁止覆盖保留字",
  "禁止使用保留的 props": "禁止使用保留的 props",
  "禁止在模版中使用指定的 block": "禁止在模版中使用指定的 block",
  "禁止 await 后调用指定的函数": "禁止 await 后调用指定的函数",
  "限制使用特定的 class": "限制使用特定的 class",
  "禁止使用指定的组件选项": "禁止使用指定的组件选项",
  "禁止使用特定的自定义事件": "禁止使用特定的自定义事件",
  "禁止使用指定的元素": "禁止使用指定的元素",
  "禁止使用特定的 props": "禁止使用特定的 props",
  "禁止使用指定的属性": "禁止使用指定的属性",
  "禁止使用指定的 v-bind 参数": "禁止使用指定的 v-bind 参数",
  "禁止对 setup 中的 props 解构": "禁止对 setup 中的 props 解构",
  "组件的 data 属性的值必须是一个函数": "组件的 data 属性的值必须是一个函数",
  "禁止在计算属性中对属性修改": "禁止在计算属性中对属性修改",
  "禁止使用 style 属性": "禁止使用 style 属性",
  "禁止 <template> 使用 key 属性": "禁止 <template> 使用 key 属性",
  "模版中的变量名禁止与前一个作用域重名": "模版中的变量名禁止与前一个作用域重名",
  "添加了 target=\"_blank\" 属性时，必须添加 rel=\"noopener noreferrer\"": "添加了 target=\"_blank\" 属性时，必须添加 rel=\"noopener noreferrer\"",
  "禁止在 <textarea> 中出现模版语法 {{message}}": "禁止在 <textarea> 中出现模版语法 {{message}}",
  "禁止在 beforeRouteEnter 方法中使用 this": "禁止在 beforeRouteEnter 方法中使用 this",
  "禁止使用未定义的属性": "禁止使用未定义的属性",
  "当你的 vue 版本较老时，禁用还未支持的语法": "当你的 vue 版本较老时，禁用还未支持的语法",
  "禁止定义在 components 中的组件未使用": "禁止定义在 components 中的组件未使用",
  "禁止属性定义了却未使用": "禁止属性定义了却未使用",
  "识别有限制，无法识别在其他组件中使用的情况": "识别有限制，无法识别在其他组件中使用的情况",
  "模版中已定义的变量必须使用": "模版中已定义的变量必须使用",
  "禁止将计算熟悉当作方法调用": "禁止将计算熟悉当作方法调用",
  "禁止在同一个元素上使用 v-if 和 v-for 指令": "禁止在同一个元素上使用 v-if 和 v-for 指令",
  "禁止出现无用的 mustache 字符串": "禁止出现无用的 mustache 字符串",
  "禁止模版中使用未生效的属性": "禁止模版中使用未生效的属性",
  "禁止出现无用的 v-bind": "禁止出现无用的 v-bind",
  "禁止使用 v-html": "禁止使用 v-html",
  "禁止使用 v-text": "禁止使用 v-text",
  "禁止在组件中使用 v-text v-html": "禁止在组件中使用 v-text v-html",
  "禁止在 await 之后调用 watch": "禁止在 await 之后调用 watch",
  "一个文件必须仅包含一个组件": "一个文件必须仅包含一个组件",
  "组件的属性必须为一定的顺序": "组件的属性必须为一定的顺序",
  "<template> <script> <style> 之间必须有空行": "<template> <script> <style> 之间必须有空行",
  "模版中兄弟节点之间必须换行": "模版中兄弟节点之间必须换行",
  "必须导入 vue 而不是 @vue/*": "必须导入 vue 而不是 @vue/*",
  "Boolean 必须是组件 prop 的第一个参数": "Boolean 必须是组件 prop 的第一个参数",
  "在模版中必须用单独的 class 属性表达静态类的名字": "在模版中必须用单独的 class 属性表达静态类的名字",
  "v-bind 值为 true 时，必须省略显示声明": "v-bind 值为 true 时，必须省略显示声明",
  "props 必须用驼峰式": "props 必须用驼峰式",
  "<component> 必须有绑定的组件": "<component> 必须有绑定的组件",
  "props 如果不是 required 的字段，必须有默认值": "props 如果不是 required 的字段，必须有默认值",
  "必须直接使用 export default 导出组件": "必须直接使用 export default 导出组件",
  "emits 必须为函数": "emits 必须为函数",
  "emits 属性必须包含 $emit() 中的值": "emits 属性必须包含 $emit() 中的值",
  "必须导出 expose": "必须导出 expose",
  "组件必须包含 name 属性": "组件必须包含 name 属性",
  "props 必须有注释": "props 必须有注释",
  "props 的取值必须是基本类型的构造函数，而不是字符串": "props 的取值必须是基本类型的构造函数，而不是字符串",
  "prop 必须有类型限制": "prop 必须有类型限制",
  "render 函数必须有返回值": "render 函数必须有返回值",
  "this.$slots.default 必须被当作方法使用": "this.$slots.default 必须被当作方法使用",
  "transition 内部必须有条件指令": "transition 内部必须有条件指令",
  "v-for 指令的元素必须有 v-bind:key": "v-for 指令的元素必须有 v-bind:key",
  "prop 的默认值必须匹配它的类型": "prop 的默认值必须匹配它的类型",
  "计算属性必须有返回值": "计算属性必须有返回值",
  "emits 中的方法必须有返回值": "emits 中的方法必须有返回值",
  "props 的键名必须排好序": "props 的键名必须排好序",
  "class 的值必须按字母排序": "class 的值必须按字母排序",
  "禁止在模版中用 this": "禁止在模版中用 this",
  "当一个节点上出现两个 v-on:click 时，其中一个必须为 exact": "当一个节点上出现两个 v-on:click 时，其中一个必须为 exact",
  "使用缩写的 : 而不是 v-bind:": "使用缩写的 : 而不是 v-bind:",
  "v-for 中必须用 in 进行遍历": "v-for 中必须用 in 进行遍历",
  "禁止在 v-on 的事件名使用横杠": "禁止在 v-on 的事件名使用横杠",
  "禁止 v-on 的值使用函数调用的格式": "禁止 v-on 的值使用函数调用的格式",
  "使用缩写的 @click 而不是 v-on:click": "使用缩写的 @click 而不是 v-on:click",
  "使用缩写的 #one 而不是 v-slot:one": "使用缩写的 #one 而不是 v-slot:one",
  "属性名必须合法": "属性名必须合法",
  "defineEmits 必须使用合法的语法": "defineEmits 必须使用合法的语法",
  "defineProps 必须使用合法的语法": "defineProps 必须使用合法的语法",
  "model 的属性名必须合法": "model 的属性名必须合法",
  "禁止调用 Vue.nextTick 或 vm.$nextTick 时不使用 await": "禁止调用 Vue.nextTick 或 vm.$nextTick 时不使用 await",
  "template 的根节点必须合法": "template 的根节点必须合法",
  "v-bind 指令必须合法": "v-bind 指令必须合法",
  "v-cloak 指令必须合法": "v-cloak 指令必须合法",
  "v-else 指令必须合法": "v-else 指令必须合法",
  "v-else-if 指令必须合法": "v-else-if 指令必须合法",
  "v-for 指令必须合法": "v-for 指令必须合法",
  "v-html 指令必须合法": "v-html 指令必须合法",
  "v-if 指令必须合法": "v-if 指令必须合法",
  "v-is 指令必须合法": "v-is 指令必须合法",
  "valid-v-memo 指令必须合法": "valid-v-memo 指令必须合法",
  "v-model 指令必须合法": "v-model 指令必须合法",
  "v-on 指令必须合法": "v-on 指令必须合法",
  "v-once 指令必须合法": "v-once 指令必须合法",
  "v-pre 指令必须合法": "v-pre 指令必须合法",
  "v-show 指令必须合法": "v-show 指令必须合法",
  "v-slot 指令必须合法": "v-slot 指令必须合法",
  "v-text 指令必须合法": "v-text 指令必须合法",
  "重载的函数必须写在一起": "重载的函数必须写在一起",
  "增加可读性": "增加可读性",
  "限制数组类型必须使用 Array<T> 或 T[]": "限制数组类型必须使用 Array<T> 或 T[]",
  "允许灵活运用两者": "允许灵活运用两者",
  "禁止对没有 then 方法的对象使用 await": "禁止对没有 then 方法的对象使用 await",
  "禁止使用 // @ts-ignore // @ts-nocheck // @ts-check": "禁止使用 // @ts-ignore // @ts-nocheck // @ts-check",
  "这种注释本身就是对特殊代码的说明": "这种注释本身就是对特殊代码的说明",
  "禁止使用类似 tslint:disable-next-line 这样的注释": "禁止使用类似 tslint:disable-next-line 这样的注释",
  "禁止使用指定的类型": "禁止使用指定的类型",
  "类的只读属性若是一个字面量，则必须使用只读属性而不是 getter": "类的只读属性若是一个字面量，则必须使用只读属性而不是 getter",
  "使用 Map 或 Set 时，必须在构造函数上用泛型定义类型": "使用 Map 或 Set 时，必须在构造函数上用泛型定义类型",
  "必须使用内置的 Record<K, T> 来描述仅包含可索引成员的接口": "必须使用内置的 Record<K, T> 来描述仅包含可索引成员的接口",
  "类型断言必须使用 as Type，禁止使用 <Type>，禁止对对象字面量进行类型断言（断言成 any 是允许的）": "类型断言必须使用 as Type，禁止使用 <Type>，禁止对对象字面量进行类型断言（断言成 any 是允许的）",
  "<Type> 容易被理解为 jsx": "<Type> 容易被理解为 jsx",
  "优先使用 interface 而不是 type": "优先使用 interface 而不是 type",
  "interface 可以 implement, extend 和 merge": "interface 可以 implement, extend 和 merge",
  "一致的类型导出语法": "一致的类型导出语法",
  "必须使用 import type 导入类型": "必须使用 import type 导入类型",
  "有默认值或可选的参数必须放到最后": "有默认值或可选的参数必须放到最后",
  "函数返回值必须与声明的类型一致": "函数返回值必须与声明的类型一致",
  "返回值类型可以推导出来": "返回值类型可以推导出来",
  "必须设置类的成员的可访问性": "必须设置类的成员的可访问性",
  "将不需要公开的成员设为私有的，可以增强代码的可理解性，对文档输出也很友好": "将不需要公开的成员设为私有的，可以增强代码的可理解性，对文档输出也很友好",
  "导出的函数或类中的 public 方法必须定义输入输出参数的类型": "导出的函数或类中的 public 方法必须定义输入输出参数的类型",
  "指定类成员的排序规则": "指定类成员的排序规则",
  "优先级：\n1. static > instance\n2. field > constructor > method\n3. public > protected > private": "优先级：\n1. static > instance\n2. field > constructor > method\n3. public > protected > private",
  "接口中的方法必须用属性的方式定义": "接口中的方法必须用属性的方式定义",
  "配置了 strictFunctionTypes 之后，用属性的方式定义方法可以获得更严格的检查": "配置了 strictFunctionTypes 之后，用属性的方式定义方法可以获得更严格的检查",
  "限制各种变量或类型的命名规则": "限制各种变量或类型的命名规则",
  "禁止使用 Array 构造函数": "禁止使用 Array 构造函数",
  "禁止滥用 toString 方法": "禁止滥用 toString 方法",
  "禁止使用容易混淆的非空断言": "禁止使用容易混淆的非空断言",
  "禁止使用返回值为 void 的函数的返回值": "禁止使用返回值为 void 的函数的返回值",
  "禁止枚举类型存在两个相同的值": "禁止枚举类型存在两个相同的值",
  "禁止 delete 时传入的 key 是动态的": "禁止 delete 时传入的 key 是动态的",
  "禁止定义空的接口": "禁止定义空的接口",
  "禁止使用 any": "禁止使用 any",
  "禁止多余的 non-null 断言": "禁止多余的 non-null 断言",
  "禁止定义没必要的类，比如只有静态方法的类": "禁止定义没必要的类，比如只有静态方法的类",
  "禁止调用 Promise 时没有处理异常情况": "禁止调用 Promise 时没有处理异常情况",
  "禁止对 array 使用 for in 循环": "禁止对 array 使用 for in 循环",
  "禁止给一个初始化时直接赋值为 number, string 的变量显式的声明类型": "禁止给一个初始化时直接赋值为 number, string 的变量显式的声明类型",
  "可以简化代码": "可以简化代码",
  "禁止使用无意义的 void 类型": "禁止使用无意义的 void 类型",
  "void 只能用在函数的返回值中": "void 只能用在函数的返回值中",
  "禁止 void 抛出空": "禁止 void 抛出空",
  "禁止在接口中定义 constructor，或在类中定义 new": "禁止在接口中定义 constructor，或在类中定义 new",
  "避免错误的使用 Promise": "避免错误的使用 Promise",
  "禁止使用 namespace 来定义命名空间": "禁止使用 namespace 来定义命名空间",
  "使用 es6 引入模块，才是更标准的方式。\n但是允许使用 declare namespace ... {} 来定义外部命名空间": "使用 es6 引入模块，才是更标准的方式。\n但是允许使用 declare namespace ... {} 来定义外部命名空间",
  "禁止非空断言后面跟着双问号": "禁止非空断言后面跟着双问号",
  "禁止在 optional chaining 之后使用 non-null 断言（感叹号）": "禁止在 optional chaining 之后使用 non-null 断言（感叹号）",
  "optional chaining 后面的属性一定是非空的": "optional chaining 后面的属性一定是非空的",
  "禁止使用 non-null 断言（感叹号）": "禁止使用 non-null 断言（感叹号）",
  "使用 non-null 断言时就已经清楚了风险": "使用 non-null 断言时就已经清楚了风险",
  "禁止无用的联合类型或交叉类型": "禁止无用的联合类型或交叉类型",
  "禁止使用 require": "禁止使用 require",
  "统一使用 import 来引入模块，特殊情况使用单行注释允许 require 引入": "统一使用 import 来引入模块，特殊情况使用单行注释允许 require 引入",
  "禁止将 this 赋值给其他变量，除非是解构赋值": "禁止将 this 赋值给其他变量，除非是解构赋值",
  "禁止使用类型别名": "禁止使用类型别名",
  "测试表达式中的布尔类型禁止与 true 或 false 直接比较": "测试表达式中的布尔类型禁止与 true 或 false 直接比较",
  "条件表达式禁止是永远为真（或永远为假）的": "条件表达式禁止是永远为真（或永远为假）的",
  "在命名空间中，可以直接使用内部变量，不需要添加命名空间前缀": "在命名空间中，可以直接使用内部变量，不需要添加命名空间前缀",
  "禁止范型的类型有默认值时，将范型设置为该默认值": "禁止范型的类型有默认值时，将范型设置为该默认值",
  "禁止无用的类型断言": "禁止无用的类型断言",
  "禁止没用的类型限制": "禁止没用的类型限制",
  "禁止将 any 类型的变量作为函数参数调用": "禁止将 any 类型的变量作为函数参数调用",
  "禁止将变量或属性的类型设置为 any": "禁止将变量或属性的类型设置为 any",
  "禁止调用 any 类型的变量上的方法": "禁止调用 any 类型的变量上的方法",
  "禁止 class 和 interface 合并类型": "禁止 class 和 interface 合并类型",
  "禁止获取 any 类型的变量中的属性": "禁止获取 any 类型的变量中的属性",
  "禁止函数的返回值的类型是 any": "禁止函数的返回值的类型是 any",
  "禁止在定义变量之前就使用它": "禁止在定义变量之前就使用它",
  "编译阶段检查就足够了": "编译阶段检查就足够了",
  "禁止导出空对象": "禁止导出空对象",
  "禁止使用 require 来引入模块": "禁止使用 require 来引入模块",
  "no-require-imports 规则已经约束了 require": "no-require-imports 规则已经约束了 require",
  "必须使用 ! 而不是 as": "必须使用 ! 而不是 as",
  "类的构造函数参数作为类属性时，必须加上可访问性修饰符": "类的构造函数参数作为类属性时，必须加上可访问性修饰符",
  "使用 as const 替代 as 'bar'": "使用 as const 替代 as 'bar'",
  "as const 是新语法，不是很常见": "as const 是新语法，不是很常见",
  "枚举值必须初始化": "枚举值必须初始化",
  "使用 for 循环遍历数组时，如果索引仅用于获取成员，则必须使用 for of 循环替代 for 循环": "使用 for 循环遍历数组时，如果索引仅用于获取成员，则必须使用 for of 循环替代 for 循环",
  "for of 循环更加易读": "for of 循环更加易读",
  "使用函数类型别名替代包含函数调用声明的接口": "使用函数类型别名替代包含函数调用声明的接口",
  "使用 includes 而不是 indexOf": "使用 includes 而不是 indexOf",
  "枚举类型的值必须是字面量，禁止是计算值": "枚举类型的值必须是字面量，禁止是计算值",
  "禁止使用 module 来定义命名空间": "禁止使用 module 来定义命名空间",
  "module 已成为 js 的关键字": "module 已成为 js 的关键字",
  "使用 ?? 替代 ||": "使用 ?? 替代 ||",
  "使用 optional chaining 替代 &&": "使用 optional chaining 替代 &&",
  "私有变量如果没有在构造函数外被赋值，则必须设为 readonly": "私有变量如果没有在构造函数外被赋值，则必须设为 readonly",
  "函数的参数必须设置为 readonly": "函数的参数必须设置为 readonly",
  "使用 reduce 方法时，必须传入范型，而不是对第二个参数使用 as": "使用 reduce 方法时，必须传入范型，而不是对第二个参数使用 as",
  "使用 RegExp#exec 而不是 String#match": "使用 RegExp#exec 而不是 String#match",
  "类的方法返回值是 this 时，类型必须设置为 this": "类的方法返回值是 this 时，类型必须设置为 this",
  "使用 String#startsWith 而不是其他方式": "使用 String#startsWith 而不是其他方式",
  "当需要忽略下一行的 ts 错误时，必须使用 @ts-expect-error 而不是 @ts-ignore": "当需要忽略下一行的 ts 错误时，必须使用 @ts-expect-error 而不是 @ts-ignore",
  "使用 @ts-expect-error 可以避免对不会报错的代码设置了 @ts-ignore": "使用 @ts-expect-error 可以避免对不会报错的代码设置了 @ts-ignore",
  "async 函数的返回值必须是 Promise": "async 函数的返回值必须是 Promise",
  "使用 sort 时必须传入比较函数": "使用 sort 时必须传入比较函数",
  "使用加号时，两者必须同为数字或同为字符串": "使用加号时，两者必须同为数字或同为字符串",
  "模版字符串中的变量类型必须是字符串": "模版字符串中的变量类型必须是字符串",
  "联合类型和交叉类型必须排序": "联合类型和交叉类型必须排序",
  "条件判断必须传入布尔值": "条件判断必须传入布尔值",
  "使用联合类型作为 switch 的对象时，必须包含每一个类型的 case": "使用联合类型作为 switch 的对象时，必须包含每一个类型的 case",
  "禁止使用三斜杠导入文件": "禁止使用三斜杠导入文件",
  "三斜杠是已废弃的语法，但在类型声明文件中还是可以使用的": "三斜杠是已废弃的语法，但在类型声明文件中还是可以使用的",
  "interface 和 type 定义时必须声明成员的类型": "interface 和 type 定义时必须声明成员的类型",
  "方法调用时需要绑定到正确的 this 上": "方法调用时需要绑定到正确的 this 上",
  "函数重载时，若能通过联合类型将两个函数的类型声明合为一个，则使用联合类型而不是两个函数声明": "函数重载时，若能通过联合类型将两个函数的类型声明合为一个，则使用联合类型而不是两个函数声明",
  "jsx中的className 禁止含有多余空格": "jsx中的className 禁止含有多余空格",
  "组件方法必须要有注释说明\nignoreHooks 可以忽略一些hooks不用写注释": "组件方法必须要有注释说明\nignoreHooks 可以忽略一些hooks不用写注释",
  "引入排序 */\n'simple-import-sort/imports': [\n'warn',\n{\ngroups: [\n// react等包放在首位.\n['^react', '^@?\\\\w'],\n// 绝对路径导入.\n['^(@|components)(/.*|$)'],\n// 相对路径导入\n[\n// 文件夹下的文件\n'^\\\\.\\\\.(?!/?$)',\n'^\\\\.\\\\./?$',\n// 当前同级文件下的文件\n'^\\\\./(?=.": "引入排序 */\n'simple-import-sort/imports': [\n'warn',\n{\ngroups: [\n// react等包放在首位.\n['^react', '^@?\\\\w'],\n// 绝对路径导入.\n['^(@|components)(/.*|$)'],\n// 相对路径导入\n[\n// 文件夹下的文件\n'^\\\\.\\\\.(?!/?$)',\n'^\\\\.\\\\./?$',\n// 当前同级文件下的文件\n'^\\\\./(?=.",
  "引入排序\n/\n'simple-import-sort/imports': [\n'warn',\n{\ngroups: [\n// react等包放在首位.\n['^react', '^@?\\\\w'],\n// 绝对路径导入.\n['^(@|components)(/.*|$)'],\n// 相对路径导入\n[\n// 文件夹下的文件\n'^\\\\.\\\\.(?!/?$)',\n'^\\\\.\\\\./?$',\n// 当前同级文件下的文件\n'^\\\\./(?=.": "引入排序\n/\n'simple-import-sort/imports': [\n'warn',\n{\ngroups: [\n// react等包放在首位.\n['^react', '^@?\\\\w'],\n// 绝对路径导入.\n['^(@|components)(/.*|$)'],\n// 相对路径导入\n[\n// 文件夹下的文件\n'^\\\\.\\\\.(?!/?$)',\n'^\\\\.\\\\./?$',\n// 当前同级文件下的文件\n'^\\\\./(?=.",
  "引入排序\n/\n'simple-import-sort/imports': [\n'warn',\n{\ngroups: [\n['^react', '^@?\\\\w'],\n['^(@|components)(/.*|$)'],\n['^\\\\.\\\\.(?!/?$)', '^\\\\.\\\\./?$', '^\\\\./(?=.": "引入排序\n/\n'simple-import-sort/imports': [\n'warn',\n{\ngroups: [\n['^react', '^@?\\\\w'],\n['^(@|components)(/.*|$)'],\n['^\\\\.\\\\.(?!/?$)', '^\\\\.\\\\./?$', '^\\\\./(?=.",
  "": "",
  "使用 && 渲染组件时，禁止条件是 0 '' 或 NaN，强制转为布尔值": "使用 && 渲染组件时，禁止条件是 0 '' 或 NaN，强制转为布尔值",
  "已经是布尔值的也会被转换，没有必要": "已经是布尔值的也会被转换，没有必要"
}
